[{"C:\\Users\\huttu\\git\\questionfront\\questionfront\\src\\index.js":"1","C:\\Users\\huttu\\git\\questionfront\\questionfront\\src\\serviceWorker.js":"2","C:\\Users\\huttu\\git\\questionfront\\questionfront\\src\\App.js":"3","C:\\Users\\huttu\\git\\questionfront\\questionfront\\src\\components\\Questionlist.js":"4","C:\\Users\\huttu\\git\\questionfront\\questionfront\\src\\components\\Answer.js":"5"},{"size":452,"mtime":1607604625364,"results":"6","hashOfConfig":"7"},{"size":5085,"mtime":1607604625395,"results":"8","hashOfConfig":"7"},{"size":534,"mtime":1607793451197,"results":"9","hashOfConfig":"7"},{"size":2054,"mtime":1607941295862,"results":"10","hashOfConfig":"7"},{"size":2376,"mtime":1607871015171,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1n1okck",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},"C:\\Users\\huttu\\git\\questionfront\\questionfront\\src\\index.js",[],["24","25"],"C:\\Users\\huttu\\git\\questionfront\\questionfront\\src\\serviceWorker.js",[],"C:\\Users\\huttu\\git\\questionfront\\questionfront\\src\\App.js",[],"C:\\Users\\huttu\\git\\questionfront\\questionfront\\src\\components\\Questionlist.js",["26"],"C:\\Users\\huttu\\git\\questionfront\\questionfront\\src\\components\\Answer.js",["27"],"import React, { useState } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\n\nexport default function Answer(props) {\n  const [question, setQuestion] = useState({qst: props.question.qst, qsttype: props.question.qsttype, answer: props.question.answer});\n\n  const refreshPage = () => {\n    setTimeout(() => {\n    window.location.reload();\n  }, 1200);\n  }\n\n  const handleClose = () => {\n    props.updateQuestion(props.question._links.self.href, question);\n    props.saveQuestion(question);\n  }\n\n  const inputChanged = (event) => {\n    setQuestion({...question, [event.target.name]: event.target.value});\n  }\n\n\n  \n  if(question.qsttype===\"radio\"){\n    return(\n      <div>\n       <FormControl component=\"fieldset\" >\n       <FormLabel component=\"legend\">Anna arvo välillä 1-5:</FormLabel>\n            <RadioGroup row aria-label=\"answer\" name=\"answer\"  value={question.answer}\n             onChange={inputChanged} onBlur={handleClose}>\n              <FormControlLabel value=\"1\" control={<Radio />} label=\"1\" />\n              <FormControlLabel value=\"2\" control={<Radio />} label=\"2\" />\n              <FormControlLabel value=\"3\" control={<Radio />} label=\"3\" />\n              <FormControlLabel value=\"4\" control={<Radio />} label=\"4\" />\n              <FormControlLabel value=\"5\" control={<Radio />} label=\"5\" />\n            </RadioGroup>\n        </FormControl>\n      </div>\n      )\n  }\n  \n  if(question.qsttype===\"text\"){\n  return(\n    <div>\n          <TextField\n            margin=\"dense\"\n            id=\"answer\"\n            name=\"answer\"\n            value={question.answer}\n            onChange={inputChanged}\n            onBlur={handleClose}\n            label=\"Vastauksesi:\"\n            InputLabelProps={{\n              shrink: true,\n            }}\n          />\n    </div>\n  )\n}\n  if(question.qsttype=== \"number\"){\n    return(\n    <div>\n      <TextField\n    id=\"answer\"\n    name=\"answer\"\n    value={question.answer}\n    onChange={inputChanged}\n    onBlur = {handleClose}\n    label=\"Anna arvo:\"\n    type=\"number\"\n    InputLabelProps={{\n      shrink: true,\n    }}\n  />\n  </div>\n    )} \n}",{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","severity":1,"message":"33","line":17,"column":6,"nodeType":"34","endLine":17,"endColumn":8,"suggestions":"35"},{"ruleId":"36","severity":1,"message":"37","line":12,"column":9,"nodeType":"38","messageId":"39","endLine":12,"endColumn":20},"no-native-reassign",["40"],"no-negated-in-lhs",["41"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getQuestions'. Either include it or remove the dependency array.","ArrayExpression",["42"],"no-unused-vars","'refreshPage' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"43","fix":"44"},"Update the dependencies array to be: [getQuestions]",{"range":"45","text":"46"},[537,539],"[getQuestions]"]